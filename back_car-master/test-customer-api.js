// back/test-customer-api.js
const axios = require('axios');

const BASE_URL = 'http://localhost:8000/api';
let authToken = '';

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
async function loginCustomer() {
  try {
    console.log('üîê ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤...');
    const response = await axios.post(`${BASE_URL}/auth/login`, {
      username: 'customer1', // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô username ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏£‡∏¥‡∏á
      password: 'password123'
    });
    
    authToken = response.data.token;
    console.log('‚úÖ ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', response.data.message);
    return true;
  } catch (error) {
    console.error('‚ùå ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error.response?.data?.message || error.message);
    return false;
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
async function getProfile() {
  try {
    console.log('\nüë§ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå...');
    const response = await axios.get(`${BASE_URL}/customer/profile`, {
      headers: { Authorization: `Bearer ${authToken}` }
    });
    
    console.log('‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå:', response.data.profile);
    return response.data.profile;
  } catch (error) {
    console.error('‚ùå ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error.response?.data?.message || error.message);
    return null;
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
async function updateProfile() {
  try {
    console.log('\n‚úèÔ∏è ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå...');
    const updateData = {
      phone: '0812345678',
      address: '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£, ‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢'
    };
    
    const response = await axios.put(`${BASE_URL}/customer/profile`, updateData, {
      headers: { Authorization: `Bearer ${authToken}` }
    });
    
    console.log('‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', response.data.message);
    return true;
  } catch (error) {
    console.error('‚ùå ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error.response?.data?.message || error.message);
    return false;
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
async function getStats() {
  try {
    console.log('\nüìä ‡∏î‡∏∂‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô...');
    const response = await axios.get(`${BASE_URL}/customer/stats`, {
      headers: { Authorization: `Bearer ${authToken}` }
    });
    
    console.log('‚úÖ ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:', response.data.stats);
    return response.data.stats;
  } catch (error) {
    console.error('‚ùå ‡∏î‡∏∂‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error.response?.data?.message || error.message);
    return null;
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
async function getRentals() {
  try {
    console.log('\nüöó ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á...');
    const response = await axios.get(`${BASE_URL}/customer/rentals`, {
      headers: { Authorization: `Bearer ${authToken}` }
    });
    
    console.log('‚úÖ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á:', response.data.rentals.length, '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£');
    response.data.rentals.forEach((rental, index) => {
      console.log(`  ${index + 1}. ${rental.brand} ${rental.model} - ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${rental.rental_status}`);
    });
    return response.data.rentals;
  } catch (error) {
    console.error('‚ùå ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error.response?.data?.message || error.message);
    return [];
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
async function testCancelRental(rentalId) {
  try {
    console.log(`\n‚ùå ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á ID: ${rentalId}...`);
    const response = await axios.post(`${BASE_URL}/customer/rentals/${rentalId}/cancel`, {}, {
      headers: { Authorization: `Bearer ${authToken}` }
    });
    
    console.log('‚úÖ ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', response.data.message);
    return true;
  } catch (error) {
    console.error('‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error.response?.data?.message || error.message);
    return false;
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡∏£‡∏ñ
async function testRequestReturn(rentalId) {
  try {
    console.log(`\nüîÑ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡∏£‡∏ñ ID: ${rentalId}...`);
    const response = await axios.post(`${BASE_URL}/customer/rentals/${rentalId}/return`, {}, {
      headers: { Authorization: `Bearer ${authToken}` }
    });
    
    console.log('‚úÖ ‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡∏£‡∏ñ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', response.data.message);
    return true;
  } catch (error) {
    console.error('‚ùå ‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡∏£‡∏ñ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error.response?.data?.message || error.message);
    return false;
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
async function runAllTests() {
  console.log('üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏î‡∏™‡∏≠‡∏ö Customer API...\n');
  
  // ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
  const loginSuccess = await loginCustomer();
  if (!loginSuccess) {
    console.log('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÑ‡∏î‡πâ ‡∏¢‡∏∏‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö');
    return;
  }
  
  // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API ‡∏ï‡πà‡∏≤‡∏á‡πÜ
  await getProfile();
  await updateProfile();
  await getStats();
  const rentals = await getRentals();
  
  // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÅ‡∏•‡∏∞‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡∏£‡∏ñ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á)
  if (rentals.length > 0) {
    const firstRental = rentals[0];
    console.log(`\nüîç ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÅ‡∏£‡∏Å: ID ${firstRental.id}, ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${firstRental.rental_status}`);
    
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà pending)
    if (firstRental.rental_status === 'pending') {
      await testCancelRental(firstRental.id);
    }
    
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡∏£‡∏ñ (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà confirmed ‡∏´‡∏£‡∏∑‡∏≠ ongoing)
    if (['confirmed', 'ongoing'].includes(firstRental.rental_status) && firstRental.payment_status === 'paid') {
      await testRequestReturn(firstRental.id);
    }
  }
  
  console.log('\n‚úÖ ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!');
}

// ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
if (require.main === module) {
  runAllTests().catch(console.error);
}

module.exports = {
  loginCustomer,
  getProfile,
  updateProfile,
  getStats,
  getRentals,
  testCancelRental,
  testRequestReturn
};
